<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hhly.smartdata.mapper.source.DataViewMapper">
    <resultMap id="BaseResultMap" type="com.hhly.smartdata.model.source.DataView">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="country" property="country" jdbcType="INTEGER"/>
        <result column="client_identity" property="clientIdentity" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="platform_terminal" property="platformTerminal" jdbcType="INTEGER"/>
        <result column="website_domain" property="websiteDomain" jdbcType="VARCHAR"/>
        <result column="page_view" property="pageView" jdbcType="INTEGER"/>
        <result column="url_path" property="urlPath" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, country, client_identity, user_id, platform_terminal, website_domain, page_view,
        url_path, create_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from data_view
        where id = #{id,jdbcType=BIGINT}
    </select>
    <insert id="insert" parameterType="com.hhly.smartdata.model.source.DataView">
        insert into data_view (id, country, client_identity,
        user_id, platform_terminal, website_domain,
        page_view, url_path, create_time
        )
        values (#{id,jdbcType=BIGINT}, #{country,jdbcType=INTEGER}, #{clientIdentity,jdbcType=VARCHAR},
        #{userId,jdbcType=VARCHAR}, #{platformTerminal,jdbcType=INTEGER}, #{websiteDomain,jdbcType=VARCHAR},
        #{pageView,jdbcType=INTEGER}, #{urlPath,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.hhly.smartdata.model.source.DataView">
        insert into data_view
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="country != null">
                country,
            </if>
            <if test="clientIdentity != null">
                client_identity,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="platformTerminal != null">
                platform_terminal,
            </if>
            <if test="websiteDomain != null">
                website_domain,
            </if>
            <if test="pageView != null">
                page_view,
            </if>
            <if test="urlPath != null">
                url_path,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="country != null">
                #{country,jdbcType=INTEGER},
            </if>
            <if test="clientIdentity != null">
                #{clientIdentity,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="platformTerminal != null">
                #{platformTerminal,jdbcType=INTEGER},
            </if>
            <if test="websiteDomain != null">
                #{websiteDomain,jdbcType=VARCHAR},
            </if>
            <if test="pageView != null">
                #{pageView,jdbcType=INTEGER},
            </if>
            <if test="urlPath != null">
                #{urlPath,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hhly.smartdata.model.source.DataView">
        update data_view
        <set>
            <if test="country != null">
                country = #{country,jdbcType=INTEGER},
            </if>
            <if test="clientIdentity != null">
                client_identity = #{clientIdentity,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="platformTerminal != null">
                platform_terminal = #{platformTerminal,jdbcType=INTEGER},
            </if>
            <if test="websiteDomain != null">
                website_domain = #{websiteDomain,jdbcType=VARCHAR},
            </if>
            <if test="pageView != null">
                page_view = #{pageView,jdbcType=INTEGER},
            </if>
            <if test="urlPath != null">
                url_path = #{urlPath,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hhly.smartdata.model.source.DataView">
        update data_view
        set country = #{country,jdbcType=INTEGER},
        client_identity = #{clientIdentity,jdbcType=VARCHAR},
        user_id = #{userId,jdbcType=VARCHAR},
        platform_terminal = #{platformTerminal,jdbcType=INTEGER},
        website_domain = #{websiteDomain,jdbcType=VARCHAR},
        page_view = #{pageView,jdbcType=INTEGER},
        url_path = #{urlPath,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectUserViewByStartTimeAndEndTime" resultType="java.util.Map">
        select
        platform_terminal as sourceType ,
        count(DISTINCT(BINARY client_identity)) as userCount
        from
        data_view
        where  client_identity != ''
        AND create_time &lt; #{endTime}
        AND create_time &gt;= #{startTime}
        group by platform_terminal
    </select>

    <select id="selectPageViewByStartTimeAndEndTime" resultType="java.util.Map">
        select
        platform_terminal as sourceType,
        count(id) as pageCount
         from data_view
        where create_time &lt; #{endTime}
        AND create_time &gt;= #{startTime}
        group by platform_terminal
    </select>

    <select id="selectUserViewAndPageViewGroupBySourceType" resultType="java.util.Map">
        select
        BINARY user_id as userId,
        platform_terminal as sourceType
        from data_view
        where
        user_id is not null
        and user_id != ''
        and create_time &gt;= #{startTime}
        and create_time &lt; #{endTime}
        group by platform_terminal,BINARY user_id
    </select>

    <select id="selectYesterdayUserViewAndPageViewList" resultType="java.util.Map">
        select
        BINARY user_id as userId,
        platform_terminal as osType
        from data_view
        where
        user_id is not null
        and user_id != ''
        and create_time &gt;= #{startTime}
        and create_time &lt; #{endTime}
        group by platform_terminal,BINARY user_id
    </select>

    <select id="selectTodayGameStartCountGroupByUser" resultType="java.util.Map">
        select user_id as userId from data_view where
        user_id is not null and user_id != ''
        and create_time &gt;= #{startTime}
        and create_time &lt; #{endTime}
        group by BINARY user_id
    </select>

    <select id="selectTodayGameStartCountGroupByUserAndOsType" resultType="java.util.Map">
        select BINARY user_id as userId,platform_terminal as osType  from data_view where
        user_id is not null and user_id != ''
         and create_time &gt;= #{startTime}
        and create_time &lt; #{endTime}
        group by platform_terminal,BINARY user_id
        order by create_time desc
    </select>
    <select id="selectUserViewAndPageViewByTime" resultType="java.lang.String">
        select
        user_id
        from data_view
        where
        user_id is not null and user_id != ''
        and create_time &gt;= #{startTime}
        and create_time &lt; #{endTime}
    </select>

    <select id="selectUserViewAndPageViewByTimeGroupBySource" resultType="java.util.Map">
        SELECT
        platform_terminal AS sourceType,
        BINARY user_id AS userId
        FROM
        data_view
        WHERE
        user_id is not null and user_id != ''
        and create_time &lt;= #{endTime}
        AND create_time &gt;= #{startTime}
        GROUP BY platform_terminal,BINARY  user_id
    </select>

    <select id="selectOldUserViewAndPageViewByTime" resultType="java.lang.String">
        select
        user_id
        from
        data_view
        where
        user_id is not null and user_id != ''
        and create_time &lt; #{time}
    </select>
</mapper>