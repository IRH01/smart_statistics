<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hhly.smartdata.mapper.authentication.RoleMapper">

    <resultMap id="BaseResultMap" type="com.hhly.smartdata.model.authentication.Role">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, create_time
    </sql>

    <select id="getRolesByUserId" resultMap="BaseResultMap">
        select
        r.id,r.name,r.create_time
        from tbl_role r join tbl_user_role u on r.id=u.role_id
        where u.user_id=#{userId}
    </select>

    <select id="getChannelRole" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_role
        where name=#{name}
    </select>

    <select id="get" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from tbl_role
        where id = #{id}
    </select>

    <select id="search" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_role
        <where>
            and id!='43'
            <if test="filter.name != null and filter.name != ''">
                and name like CONCAT('%',#{filter.name},'%')
            </if>
            <if test="filter.id != null ">
                and id = #{filter.id}
            </if>
        </where>
        <if test="page != null">
            limit 0,10
        </if>
    </select>

    <select id="getPerms" resultType="java.lang.String" parameterType="list">
        SELECT
        permission
        FROM
        tbl_role_permission
        WHERE role_id in
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <delete id="delete">
        delete from tbl_role
        where id = #{id}
    </delete>

    <delete id="delPermsByRole" parameterType="list">
        delete
        from
        tbl_role_permission
        where
        role_id in
        <foreach collection="list" item="id" separator="," open="("
                 close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="delUsersByRole" parameterType="list">
        delete
        from
        tbl_user_role
        where
        role_id in
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="delPerm">
        delete
        from
        tbl_role_permission
        where
        permission=#{perm}
    </delete>

    <delete id="deleteUserRoles" parameterType="int">
        delete
        from
        tbl_user_role
        where
        user_id=#{userId}
    </delete>

    <insert id="insertRolePermission" useGeneratedKeys="true" keyProperty="id">
        insert into tbl_role_permission (role_id , permission)
        values (#{roleId} , #{permission} )
    </insert>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into tbl_role (name, create_time)
        values (#{name}, #{createTime})
    </insert>

    <insert id="insertUserRole" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tbl_user_role(
        user_id,
        role_id)
        VALUES(
        #{userId},
        #{roleId})
    </insert>

    <update id="update">
        update tbl_role
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>

</mapper>