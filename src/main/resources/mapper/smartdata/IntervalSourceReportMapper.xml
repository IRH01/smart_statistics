<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hhly.smartdata.mapper.smartdata.IntervalSourceReportMapper">
    <resultMap id="BaseResultMap" type="com.hhly.smartdata.model.smartdata.IntervalSourceReport">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="statistics_time" property="statisticsTime" jdbcType="VARCHAR"/>
        <result column="interval_time" property="intervalTime" jdbcType="INTEGER"/>
        <result column="source_type" property="sourceType" jdbcType="TINYINT"/>
        <result column="register_population" property="registerPopulation" jdbcType="INTEGER"/>
        <result column="login_population" property="loginPopulation" jdbcType="INTEGER"/>
        <result column="recharge_population" property="rechargePopulation" jdbcType="INTEGER"/>
        <result column="recharge_count" property="rechargeCount" jdbcType="INTEGER"/>
        <result column="recharge_amount" property="rechargeAmount" jdbcType="DECIMAL"/>
        <result column="execute_time" property="executeTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, statistics_time, interval_time, source_type, register_population, login_population,
        recharge_population, recharge_count, recharge_amount, execute_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from interval_source_report
        where id = #{id,jdbcType=BIGINT}
    </select>
    <insert id="insert" parameterType="com.hhly.smartdata.model.smartdata.IntervalSourceReport">
        insert into interval_source_report (id, statistics_time, interval_time,
        source_type, register_population, login_population,
        recharge_population, recharge_count, recharge_amount,
        execute_time)
        values (#{id,jdbcType=BIGINT}, #{statisticsTime,jdbcType=VARCHAR}, #{intervalTime,jdbcType=INTEGER},
        #{sourceType,jdbcType=TINYINT}, #{registerPopulation,jdbcType=INTEGER}, #{loginPopulation,jdbcType=INTEGER},
        #{rechargePopulation,jdbcType=INTEGER}, #{rechargeCount,jdbcType=INTEGER}, #{rechargeAmount,jdbcType=DECIMAL},
        #{executeTime,jdbcType=TIMESTAMP})
    </insert>
    <select id="selectIntervalSourceToltalData" resultType="java.util.Map" parameterType="java.util.Map">
        select sum(register_population) as registerPopulation,sum(login_population) as loginPopulation ,sum(recharge_population) as rechargePopulation ,
         sum(recharge_count) as rechargeCount,sum(recharge_amount) as rechargeAmount
         from interval_source_report where statistics_time like concat(concat('%',DATE_FORMAT(now(),'%Y-%m-%d '),'%'))
        <if test="startDate != null and startDate  != ''">
            <![CDATA[
             and  statistics_time > DATE_FORMAT(#{startDate},'%Y-%m-%d %H:%i:%S')
  		]]>
        </if>
        <if test="endDate != null and endDate  != ''">
            <![CDATA[
  		     and  statistics_time <=  DATE_FORMAT(#{endDate},'%Y-%m-%d %H:%i:%S')
  		]]>
        </if>
    </select>
    <select id="selectIntervalSourceListData" resultType="com.hhly.smartdata.model.smartdata.IntervalSourceReport" parameterType="java.util.Map">
        select
        statistics_time,
        sum(register_population) as register_population,
        sum(login_population) as loginPopulation,
        sum(recharge_population) as rechargePopulation,
        sum(recharge_count) as rechargeCount,
        sum(recharge_amount) as rechargeAmount
        from interval_source_report
        where 1=1
        and statistics_time like concat(concat('%',DATE_FORMAT(now(),'%Y-%m-%d '),'%'))
        <if test="startDate != null and startDate  != ''">
            <![CDATA[
             and  statistics_time > DATE_FORMAT(#{startDate},'%Y-%m-%d %H:%i:%S')
  		]]>
        </if>
        <if test="endDate != null and endDate  != ''">
            <![CDATA[
  		     and  statistics_time <=  DATE_FORMAT(#{endDate},'%Y-%m-%d %H:%i:%S')
  		]]>
        </if>
        group by statistics_time
        order by statistics_time desc
    </select>

    <select id="selectIntervalSourceChartData" resultType="com.hhly.smartdata.model.smartdata.IntervalSourceReport" parameterType="java.util.Map">
        select
        DATE_FORMAT(statistics_time,'%H:%i') as statistics_time,
        sum(register_population) as register_population,
        sum(login_population) as loginPopulation,
        sum(recharge_population) as rechargePopulation,
        sum(recharge_count) as rechargeCount,
        sum(recharge_amount) as rechargeAmount
        from interval_source_report
        where 1=1
        and statistics_time like concat(concat('%',DATE_FORMAT(now(),'%Y-%m-%d '),'%'))
        <if test="startDate != null and startDate  != ''">
            <![CDATA[
             and  statistics_time > DATE_FORMAT(#{startDate},'%Y-%m-%d %H:%i:%S')
  		]]>
        </if>
        <if test="endDate != null and endDate  != ''">
            <![CDATA[
  		     and  statistics_time <=  DATE_FORMAT(#{endDate},'%Y-%m-%d %H:%i:%S')
  		]]>
        </if>
        <if test="deviceTypes">
            and source_type in
            <foreach item="item" index="index" collection="deviceTypes"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        group by statistics_time
    </select>

    <select id="selectIntervalTerminalsSourceListData" resultType="com.hhly.smartdata.model.smartdata.IntervalSourceReport" parameterType="java.util.Map">
        select
        source_type as sourceType,
        sum(register_population) as register_population,
        sum(login_population) as loginPopulation,
        sum(recharge_population) as rechargePopulation,
        sum(recharge_count) as rechargeCount,
        sum(recharge_amount) as rechargeAmount
        from interval_source_report
        where 1=1
        and statistics_time like concat(concat('%',DATE_FORMAT(now(),'%Y-%m-%d '),'%'))
        <if test="startDate != null and startDate  != ''">
            <![CDATA[
             and  statistics_time > DATE_FORMAT(#{startDate},'%Y-%m-%d %H:%i:%S')
  		]]>
        </if>
        <if test="endDate != null and endDate  != ''">
            <![CDATA[
  		     and  statistics_time <=  DATE_FORMAT(#{endDate},'%Y-%m-%d %H:%i:%S')
  		]]>
        </if>
        group by source_type
        order by source_type asc
    </select>

    <select id="selectIntervalTimeTerminalsSourceListData" resultType="com.hhly.smartdata.model.smartdata.IntervalSourceReport" parameterType="java.util.Map">
        select
        DATE_FORMAT(statistics_time,'%H:%i') as statistics_time,
        sum(register_population) as register_population,
        sum(login_population) as loginPopulation,
        sum(recharge_population) as rechargePopulation,
        sum(recharge_count) as rechargeCount,
        sum(recharge_amount) as rechargeAmount
        from interval_source_report
        where 1=1
        and statistics_time like concat(concat('%',DATE_FORMAT(now(),'%Y-%m-%d '),'%'))
        <if test="startDate != null and startDate  != ''">
            <![CDATA[
             and  statistics_time > DATE_FORMAT(#{startDate},'%Y-%m-%d %H:%i:%S')
  		]]>
        </if>
        <if test="endDate != null and endDate  != ''">
            <![CDATA[
  		     and  statistics_time <=  DATE_FORMAT(#{endDate},'%Y-%m-%d %H:%i:%S')
  		]]>
        </if>
        <if test="deviceType != null and deviceType !=''">
            and source_type = #{deviceType}
        </if>
        group by statistics_time
        order by statistics_time desc
    </select>

</mapper>